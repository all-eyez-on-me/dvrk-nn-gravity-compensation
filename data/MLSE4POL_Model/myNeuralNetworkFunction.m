function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 10-Jul-2019 23:17:28.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 7xQ matrix, input #1
% and returns:
%   y = 7xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [1 2 3 4 5 6];
x1_step2.xoffset = [-0.523595000649894;-0.244315493842152;-0.593385041562098;-1.3962036711135;-1.48352744350811;-0.698123778730893];
x1_step2.gain = [1.90992664371544;1.94229071710547;1.68523633722175;0.424422762262554;0.440740101051222;1.4324106685331];
x1_step2.ymin = -1;

% Layer 1
b1 = [-1.2322213151758327765;-0.47437619118797391682;-0.9736579998359085053;0.22301204372926067276;1.8510980038142526016;0.23774504904835358499;0.7219495658715368025;0.51972323326265446042;-2.3473664329648933347;-1.3845088368221443176];
IW1_1 = [0.00051081258774603036706 0.39590482434023555047 0.42702188674025332027 -0.59598816730551407161 0.69945359464970624508 -0.18799192712249143677;-6.2341563216217700982e-05 -0.010101316603937964683 -0.0079107292595542669927 0.3259009114172193855 0.011487282635659646149 0.008020030058996190786;0.0019543436697834729206 -0.17830703281910903479 -0.16792885287367384506 1.1546577874257570873 1.6722288052711560269 -0.024120709282404697443;-0.00011399508063010004477 0.09894713785069118861 0.1082338948433313186 -0.65113147471070065286 -0.023167098927602144953 -0.017533262795929777794;-0.00074650681163003463573 0.39817382273128432146 -0.044421304758087643005 0.0034492728819701724309 -0.006724885336752303884 -0.002004115739392463378;8.4821232304246700628e-05 -0.26958083414301403646 -0.31158930485805336197 1.3562973422016142422 -0.30759277450899064066 -0.026460362590404799127;-0.30023971913325214755 0.002219029538640560073 -0.0013150221869278975323 -0.0003399019505174148692 -0.00087974260762458420058 0.00047267482270278417473;-0.00023200644363738942588 0.31244206377050792733 0.35970894276256448752 1.4639023569935576408 -0.46256787629284579211 -0.079022629334293395531;-0.0033774969844925346006 -0.49973472839326404937 -0.59303917184851384636 -0.81942664277801946504 -1.8028017704076972905 -0.14257668837354903202;0.00079678919255457200926 0.53907369525930026732 0.579278629640802456 -0.59010662771614574851 0.85474555125397977395 -0.16756365535077213935];

% Layer 2
b2 = [2.6203892491294715761;-5.8365840366361929625;5.3339073474427287636;5.6472853949202939106;-3.3835794735685307266;1.1841262452296026364];
LW2_1 = [-0.053329000370862758573 -0.10505131209393646363 -0.0014794480672401970952 -0.048489478098980902387 0.25980278060922823435 -0.0039730634229910881047 -4.96317059832796037 -0.0010041528038482526279 -0.00058539490517531646892 0.041256573797235657208;3.3288003086371662498 2.6164360524495133831 -0.43988165232109438518 -1.6266931376426958522 8.2458448664374159875 -0.98612981156254386761 -0.0091651161837188344778 -0.63456160735466604628 0.34717173479125035263 -3.0757276562558746313;4.4405401936406034835 4.9618065131383026767 -0.59839106000100961147 -1.5133902332101429877 -2.3828289531417112812 -1.3391074668805662551 -0.0062427163264160102571 -0.81055286510036461678 0.46866954189004089715 -4.0765771436990023702;0.31599605188768142838 17.547318392367646567 0.020121807489675860858 8.7174325300216715107 0.16590781769282511582 2.4145484010187727719 -0.0049474887010787357497 -1.5344427632972226228 -0.067108504578403949115 -0.29192144492132299227;1.8630393940082803361 -6.9511694597774882354 0.18597009198633723814 -3.1821813934977867255 0.15841705017658272436 -1.0879849374756513924 0.018433528202684606317 0.76874039306775721059 -0.61810253094967193555 -2.2734769425306948776;-4.6812744111823878512 6.9878328135422744793 0.20498913187639961064 4.325611464484707902 -0.015529627081632706512 0.62264081893616651797 -0.007446639486059490956 -0.26736139588744844975 -0.50560193308038103854 3.6585028420285814477];

% Output 1
y1_step2.ymin = -1;
y1_step2.gain = [23.4302129078175;2.28983172664627;3.07302086531729;4.4767928533476;12.3517132098434;22.8937006212783];
y1_step2.xoffset = [-0.0132777628782117;0.051405276186363;-0.091124989330597;-0.204536776119757;-0.0866827336689823;-0.0425489391007535];
y1_step1.xrows = 7;
y1_step1.keep = [1 2 3 4 5 6];
y1_step1.remove = 7;
y1_step1.constants = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = removeconstantrows_apply(x1,x1_step1);
xp1 = mapminmax_apply(xp1,x1_step2);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step2);
y1 = removeconstantrows_reverse(y1,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
y = x(settings.keep,:);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end

% Remove Constants Output Reverse-Processing Function
function x = removeconstantrows_reverse(y,settings)
Q = size(y,2);
x = nan(settings.xrows,Q,'like',y);
x(settings.keep,:) = y;
x(settings.remove,:) = repmat(settings.constants,1,Q);
end
